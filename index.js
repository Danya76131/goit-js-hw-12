import{a as g,S as L,i as l}from"./assets/vendor-CrlV4O_2.js";(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();const b="https://pixabay.com/api/",w="37268355-594f825c6dd88f3f995ae87db";async function m(e="",i=1,o=20){const r={key:w,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,page:i,per_page:o};return(await g.get(b,{params:r})).data}let S=new L(".gallery a");function p(e){const i=document.querySelector(".gallery"),o=e.map(r=>`
    <li class="gallery-item">
      <a href="${r.largeImageURL}">
        <img class="gallery-image" src="${r.webformatURL}" alt="${r.tags}" width="360" height="200"/>
      </a>
      <div class="info">
        <p><b>Likes</b> ${r.likes}</p>
        <p><b>Views</b> ${r.views}</p>
        <p><b>Comments</b> ${r.comments}</p>
        <p><b>Downloads</b> ${r.downloads}</p>
      </div>
    </li>
  `).join("");i.insertAdjacentHTML("beforeend",o),S.refresh()}function q(){const e=document.querySelector(".gallery");e.innerHTML=""}function h(){document.querySelector(".loader").classList.remove("is-hidden")}function y(){document.querySelector(".loader").classList.add("is-hidden")}const v=document.querySelector(".form"),a=document.querySelector(".load-more"),u=document.querySelector(".load-more-loader");a.classList.add("is-hidden");u.classList.add("is-hidden");let n=1,f="";const c=20;v.addEventListener("submit",async e=>{e.preventDefault();const i=e.target.elements["search-text"].value.trim();if(a.classList.add("is-hidden"),!i){l.error({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}f=i,n=1,h(),q();try{const o=await m(f,n,c);if(o.hits.length===0){l.info({title:"Info",message:"No images found for your query.",position:"topRight"}),a.classList.add("is-hidden");return}p(o.hits),o.totalHits>n*c&&a.classList.remove("is-hidden")}catch(o){l.error({title:"Error",message:"Something went wrong.",position:"topRight"}),console.error(o)}finally{y()}});a.addEventListener("click",async()=>{n+=1,h(),u.classList.remove("is-hidden");try{const e=await m(f,n,c);p(e.hits),e.totalHits<=n*c&&a.classList.add("is-hidden")}catch(e){l.error({title:"Error",message:"Failed to load more images.",position:"topRight"}),console.error(e)}finally{y(),u.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
