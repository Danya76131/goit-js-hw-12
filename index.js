import{a as g,S as L,i as l}from"./assets/vendor-CrlV4O_2.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const d of i.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&s(d)}).observe(document,{childList:!0,subtree:!0});function o(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(t){if(t.ep)return;t.ep=!0;const i=o(t);fetch(t.href,i)}})();const b="https://pixabay.com/api/",w="37268355-594f825c6dd88f3f995ae87db";async function m(e="",r=1,o=20){const s={key:w,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,page:r,per_page:o};return(await g.get(b,{params:s})).data}let S=new L(".gallery a");function h(e){const r=document.querySelector(".gallery"),o=e.map(s=>`
    <li class="gallery-item">
      <a href="${s.largeImageURL}">
        <img class="gallery-image" src="${s.webformatURL}" alt="${s.tags}" width="360" height="200"/>
      </a>
      <div class="info">
        <p><b>Likes</b> ${s.likes}</p>
        <p><b>Views</b> ${s.views}</p>
        <p><b>Comments</b> ${s.comments}</p>
        <p><b>Downloads</b> ${s.downloads}</p>
      </div>
    </li>
  `).join("");r.insertAdjacentHTML("beforeend",o),S.refresh()}function q(){const e=document.querySelector(".gallery");e.innerHTML=""}function p(){document.querySelector(".loader").classList.remove("is-hidden")}function y(){document.querySelector(".loader").classList.add("is-hidden")}const v=document.querySelector(".form"),a=document.querySelector(".load-more"),u=document.querySelector(".load-more-loader");a.classList.add("is-hidden");u.classList.add("is-hidden");let n=1,f="";const c=20;v.addEventListener("submit",async e=>{e.preventDefault();const r=e.target.elements["search-text"].value.trim();if(a.classList.add("is-hidden"),!r){l.error({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}f=r,n=1,p(),q();try{const o=await m(f,n,c);if(o.hits.length===0){l.info({title:"Info",message:"No images found for your query.",position:"topRight"}),a.classList.add("is-hidden");return}h(o.hits),o.totalHits>n*c&&a.classList.remove("is-hidden")}catch(o){l.error({title:"Error",message:"Something went wrong.",position:"topRight"}),console.error(o)}finally{y()}});a.addEventListener("click",async()=>{n+=1,p(),u.classList.remove("is-hidden");try{const e=await m(f,n,c);h(e.hits);const r=document.querySelector(".gallery-item");if(r){const o=r.getBoundingClientRect().height;window.scrollBy({top:o*2,behavior:"smooth"})}e.totalHits<=n*c&&a.classList.add("is-hidden")}catch(e){l.error({title:"Error",message:"Failed to load more images.",position:"topRight"}),console.error(e)}finally{y(),u.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
